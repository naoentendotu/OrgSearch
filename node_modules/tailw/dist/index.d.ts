import React, { FC, ComponentType } from 'react';
import tags from './tags';
declare type HtmlTag = typeof tags[number];
declare type HtmlTagProps<TTag extends HtmlTag> = TTag extends React.ElementType ? React.ComponentProps<TTag> : never;
declare type TailwFuncTag = <T extends HtmlTag, TAs extends HtmlTag = T>(tag: T, classNames: string) => FC<HtmlTagProps<T> | ({
    as: TAs;
} & HtmlTagProps<TAs>)>;
declare type TailwFuncComponent = <TProps>(component: ComponentType<TProps>, classNames: string) => FC<TProps>;
declare type TailwFunc = TailwFuncTag & TailwFuncComponent;
declare type Tailw = TailwFunc & {
    [Tag in HtmlTag]: (classNames: string | TemplateStringsArray) => FC<HtmlTagProps<Tag>>;
};
declare const tailw: Tailw;
export default tailw;
