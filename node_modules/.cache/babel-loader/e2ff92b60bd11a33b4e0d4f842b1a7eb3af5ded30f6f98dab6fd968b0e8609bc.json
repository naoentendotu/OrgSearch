{"ast":null,"code":"// api/pncpAPI.ts\nimport axios from 'axios';\n// Importa os tipos\n\nexport const fetchOrgaoInfo = async (cnpj, dataInicial, dataFinal, pagina) => {\n  const url = `https://pncp.gov.br/api/consulta/v1/contratos?cnpj=${cnpj}&dataInicial=${dataInicial}&dataFinal=${dataFinal}&pagina=${pagina}`;\n  try {\n    const response = await axios.get(url);\n\n    // A resposta da API deve conter a estrutura esperada\n    return {\n      orgao: response.data.data.length > 0 ? response.data.data[0].orgaoEntidade : null,\n      contratos: response.data.data || []\n    };\n  } catch (error) {\n    console.error(\"Erro ao buscar informações do órgão:\", error);\n    throw new Error(\"Falha ao buscar dados da API.\");\n  }\n};","map":{"version":3,"names":["axios","fetchOrgaoInfo","cnpj","dataInicial","dataFinal","pagina","url","response","get","orgao","data","length","orgaoEntidade","contratos","error","console","Error"],"sources":["C:/Users/tuliana/orgsearch/src/api/pncpAPI.ts"],"sourcesContent":["// api/pncpAPI.ts\r\nimport axios from 'axios';\r\nimport { InfoOrgao, InfoContrato } from '../tipos/index'; // Importa os tipos\r\n\r\nexport const fetchOrgaoInfo = async (cnpj: string, dataInicial: string, dataFinal: string, pagina: number) => {\r\n  const url = `https://pncp.gov.br/api/consulta/v1/contratos?cnpj=${cnpj}&dataInicial=${dataInicial}&dataFinal=${dataFinal}&pagina=${pagina}`;\r\n  \r\n  try {\r\n    const response = await axios.get(url);\r\n\r\n    // A resposta da API deve conter a estrutura esperada\r\n    return {\r\n      orgao: response.data.data.length > 0 ? response.data.data[0].orgaoEntidade : null,\r\n      contratos: response.data.data || [],\r\n    };\r\n  } catch (error) {\r\n    console.error(\"Erro ao buscar informações do órgão:\", error);\r\n    throw new Error(\"Falha ao buscar dados da API.\");\r\n  }\r\n};\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACiC;;AAE1D,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAOC,IAAY,EAAEC,WAAmB,EAAEC,SAAiB,EAAEC,MAAc,KAAK;EAC5G,MAAMC,GAAG,GAAG,sDAAsDJ,IAAI,gBAAgBC,WAAW,cAAcC,SAAS,WAAWC,MAAM,EAAE;EAE3I,IAAI;IACF,MAAME,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAACF,GAAG,CAAC;;IAErC;IACA,OAAO;MACLG,KAAK,EAAEF,QAAQ,CAACG,IAAI,CAACA,IAAI,CAACC,MAAM,GAAG,CAAC,GAAGJ,QAAQ,CAACG,IAAI,CAACA,IAAI,CAAC,CAAC,CAAC,CAACE,aAAa,GAAG,IAAI;MACjFC,SAAS,EAAEN,QAAQ,CAACG,IAAI,CAACA,IAAI,IAAI;IACnC,CAAC;EACH,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;IAC5D,MAAM,IAAIE,KAAK,CAAC,+BAA+B,CAAC;EAClD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}