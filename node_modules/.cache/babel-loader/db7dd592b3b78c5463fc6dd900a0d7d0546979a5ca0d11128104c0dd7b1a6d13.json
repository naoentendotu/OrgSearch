{"ast":null,"code":"import axios from 'axios';\nconst url_api = 'https://pncp.gov.br/api/consulta/v1/contratos';\nconst formatDate = date => {\n  return date.toISOString().slice(0, 10).replace(/-/g, \"\"); // Ex: 20240314\n};\nexport const fetchOrgaoInfo = async (cnpj, dataInicial, dataFinal) => {\n  try {\n    // requisição para a api\n    const resposta = await axios.get(`${url_api}/orgaos`, {\n      params: {\n        cnpj,\n        dataInicial,\n        dataFinal\n      }\n    });\n    console.log(resposta.data);\n\n    //adquirindo informações do órgão\n    const orgao = {\n      razaoSocial: resposta.data.orgao.razaoSocial,\n      cnpj: resposta.data.orgao.cnpj,\n      ufNome: resposta.data.orgao.ufNome,\n      municipioNome: resposta.data.orgao.municipioNome\n    };\n\n    //adquirindo informações dos contratos\n    const contratos = resposta.data.contratos.map(contrato => ({\n      numeroContratoEmpenho: contrato.numeroContratoEmpenho,\n      dataVigenciaInicio: contrato.dataVigenciaInicio,\n      dataVigenciaFim: contrato.dataVigenciaFim,\n      nomeRazaoSocialFornecedor: contrato.nomeRazaoSocialFornecedor,\n      objetoContrato: contrato.objetoContrato,\n      valorInicial: contrato.valorInicial\n    }));\n\n    //retorna as informações de contratos e órgãos\n    return {\n      orgao,\n      contratos\n    };\n  } catch (error) {\n    console.error('Erro na busca de dados do órgão!', error);\n    return null;\n  }\n};","map":{"version":3,"names":["axios","url_api","formatDate","date","toISOString","slice","replace","fetchOrgaoInfo","cnpj","dataInicial","dataFinal","resposta","get","params","console","log","data","orgao","razaoSocial","ufNome","municipioNome","contratos","map","contrato","numeroContratoEmpenho","dataVigenciaInicio","dataVigenciaFim","nomeRazaoSocialFornecedor","objetoContrato","valorInicial","error"],"sources":["C:/Users/tuliana/orgsearch/src/api/pncpAPI.ts"],"sourcesContent":["import axios from 'axios';\r\nimport {InfoOrgao, InfoContrato} from '../tipos/index';\r\n\r\nconst  url_api = 'https://pncp.gov.br/api/consulta/v1/contratos';\r\nconst formatDate = (date: Date): string => {\r\n    return date.toISOString().slice(0, 10).replace(/-/g, \"\"); // Ex: 20240314\r\n};\r\n\r\n\r\nexport const fetchOrgaoInfo = async (cnpj: string, dataInicial: Date, dataFinal: Date) => {\r\n    try {\r\n\r\n\r\n        // requisição para a api\r\n        const resposta = await axios.get(`${url_api}/orgaos`, {\r\n            params: {\r\n                cnpj,\r\n                dataInicial,\r\n                dataFinal,\r\n            },\r\n        });\r\n\r\n        console.log(resposta.data);\r\n        \r\n        //adquirindo informações do órgão\r\n        const orgao: InfoOrgao = {\r\n            razaoSocial: resposta.data.orgao.razaoSocial,\r\n            cnpj: resposta.data.orgao.cnpj,\r\n            ufNome: resposta.data.orgao.ufNome,\r\n            municipioNome: resposta.data.orgao.municipioNome,\r\n        };\r\n        \r\n        //adquirindo informações dos contratos\r\n        const contratos: InfoContrato[] = resposta.data.contratos.map((contrato: any) => ({\r\n            numeroContratoEmpenho: contrato.numeroContratoEmpenho,\r\n            dataVigenciaInicio: contrato.dataVigenciaInicio,\r\n            dataVigenciaFim: contrato.dataVigenciaFim,\r\n            nomeRazaoSocialFornecedor: contrato.nomeRazaoSocialFornecedor,\r\n            objetoContrato: contrato.objetoContrato,\r\n            valorInicial: contrato.valorInicial,\r\n          }));\r\n\r\n        //retorna as informações de contratos e órgãos\r\n        return{orgao, contratos};\r\n\r\n        } catch (error) {\r\n            console.error('Erro na busca de dados do órgão!', error);\r\n            return null;\r\n        }\r\n        };"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAOC,OAAO,GAAG,+CAA+C;AAChE,MAAMC,UAAU,GAAIC,IAAU,IAAa;EACvC,OAAOA,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAACC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;AAC9D,CAAC;AAGD,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAOC,IAAY,EAAEC,WAAiB,EAAEC,SAAe,KAAK;EACtF,IAAI;IAGA;IACA,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,GAAGX,OAAO,SAAS,EAAE;MAClDY,MAAM,EAAE;QACJL,IAAI;QACJC,WAAW;QACXC;MACJ;IACJ,CAAC,CAAC;IAEFI,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACK,IAAI,CAAC;;IAE1B;IACA,MAAMC,KAAgB,GAAG;MACrBC,WAAW,EAAEP,QAAQ,CAACK,IAAI,CAACC,KAAK,CAACC,WAAW;MAC5CV,IAAI,EAAEG,QAAQ,CAACK,IAAI,CAACC,KAAK,CAACT,IAAI;MAC9BW,MAAM,EAAER,QAAQ,CAACK,IAAI,CAACC,KAAK,CAACE,MAAM;MAClCC,aAAa,EAAET,QAAQ,CAACK,IAAI,CAACC,KAAK,CAACG;IACvC,CAAC;;IAED;IACA,MAAMC,SAAyB,GAAGV,QAAQ,CAACK,IAAI,CAACK,SAAS,CAACC,GAAG,CAAEC,QAAa,KAAM;MAC9EC,qBAAqB,EAAED,QAAQ,CAACC,qBAAqB;MACrDC,kBAAkB,EAAEF,QAAQ,CAACE,kBAAkB;MAC/CC,eAAe,EAAEH,QAAQ,CAACG,eAAe;MACzCC,yBAAyB,EAAEJ,QAAQ,CAACI,yBAAyB;MAC7DC,cAAc,EAAEL,QAAQ,CAACK,cAAc;MACvCC,YAAY,EAAEN,QAAQ,CAACM;IACzB,CAAC,CAAC,CAAC;;IAEL;IACA,OAAM;MAACZ,KAAK;MAAEI;IAAS,CAAC;EAExB,CAAC,CAAC,OAAOS,KAAK,EAAE;IACZhB,OAAO,CAACgB,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IACxD,OAAO,IAAI;EACf;AACA,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}