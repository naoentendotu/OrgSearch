{"ast":null,"code":"const handleSearch = async () => {\n  setError(null);\n  // Busca informações da API, usando a página 1\n  const data = await fetchOrgaoInfo(cnpj, dataInicial, dataFinal, 1);\n  if (data) {\n    // Atualiza valores com informações do órgão e contratos\n    setOrgao(data.orgao);\n    setContratos(data.contratos);\n  } else {\n    setError(\"Não foi possível encontrar informações para o CNPJ informado.\");\n  }\n};","map":{"version":3,"names":["handleSearch","setError","data","fetchOrgaoInfo","cnpj","dataInicial","dataFinal","setOrgao","orgao","setContratos","contratos"],"sources":["C:/Users/tuliana/orgsearch/src/components/search.tsx"],"sourcesContent":["const handleSearch = async () => {\r\n    setError(null);\r\n    // Busca informações da API, usando a página 1\r\n    const data = await fetchOrgaoInfo(cnpj, dataInicial, dataFinal, 1);\r\n    if (data) {\r\n        // Atualiza valores com informações do órgão e contratos\r\n        setOrgao(data.orgao);\r\n        setContratos(data.contratos);\r\n    } else {\r\n        setError(\"Não foi possível encontrar informações para o CNPJ informado.\");\r\n    }\r\n};\r\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAAA,CAAA,KAAY;EAC7BC,QAAQ,CAAC,IAAI,CAAC;EACd;EACA,MAAMC,IAAI,GAAG,MAAMC,cAAc,CAACC,IAAI,EAAEC,WAAW,EAAEC,SAAS,EAAE,CAAC,CAAC;EAClE,IAAIJ,IAAI,EAAE;IACN;IACAK,QAAQ,CAACL,IAAI,CAACM,KAAK,CAAC;IACpBC,YAAY,CAACP,IAAI,CAACQ,SAAS,CAAC;EAChC,CAAC,MAAM;IACHT,QAAQ,CAAC,+DAA+D,CAAC;EAC7E;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}